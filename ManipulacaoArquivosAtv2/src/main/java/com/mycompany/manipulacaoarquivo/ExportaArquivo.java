/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.manipulacaoarquivo;

import com.mycompany.manipulacaoarquivo.dao.PessoaDAO;
import com.mycompany.manipulacaoarquivo.entities.Pessoa;
import com.mycompany.manipulacaoarquivo.util.EntityManagerUtil;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.nio.charset.Charset;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author gabri
 */
public class ExportaArquivo extends javax.swing.JPanel {

    /**
     * Creates new form ExportaArquivo
     */
    public ExportaArquivo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExportarPessoas = new javax.swing.JButton();

        btnExportarPessoas.setText("Exportar Pessoas");
        btnExportarPessoas.setActionCommand("btnExportarPessoas");
        btnExportarPessoas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPessoasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(btnExportarPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btnExportarPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportarPessoasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPessoasActionPerformed
        List<Pessoa> listPessoa = new PessoaDAO(EntityManagerUtil.getManager()).findAll();
        String path = "C:\\Users\\gabri\\Desktop\\PastaAula\\pessoaexport.csv";
        exportarPessoasParaCSV(listPessoa, path);
        JOptionPane.showMessageDialog(null, "Arquivo exportado! Deu bom.", "Alerta", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnExportarPessoasActionPerformed
       
    
    public void exportarPessoasParaCSV(List<Pessoa> pessoas, String path) {
        try {
            FileWriter fileWriter = new FileWriter(path, Charset.forName("UTF-8"));
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);

            // Escrevendo cabeçalho do CSV
            bufferedWriter.write("nome;idade;cpf;rg;data_nasc;sexo;signo;mae;pai;email;senha;cep;endereco;numero;bairro;cidade;estado;telefone_fixo;celular;altura;peso;tipo_sanguineo;cor");
            bufferedWriter.newLine();

            // Escrevendo os dados das pessoas no formato CSV
            for (Pessoa pessoa : pessoas) {
                bufferedWriter.write(
                        pessoa.getNome() + ";" +
                        pessoa.getIdade() + ";" +
                        pessoa.getCpf() + ";" +
                        pessoa.getRg() + ";" +
                        pessoa.getDataNasc() + ";" +
                        pessoa.getSexo() + ";" +
                        pessoa.getSigno() + ";" +
                        pessoa.getMae() + ";" +
                        pessoa.getPai() + ";" +
                        pessoa.getEmail() + ";" +
                        pessoa.getSenha() + ";" +
                        pessoa.getCep() + ";" +
                        pessoa.getEndereco() + ";" +
                        pessoa.getNumero() + ";" +
                        pessoa.getBairro() + ";" +
                        pessoa.getCidade() + ";" +
                        pessoa.getEstado() + ";" +
                        pessoa.getTelefoneFixo() + ";" +
                        pessoa.getCelular() + ";" +
                        pessoa.getAltura() + ";" +
                        pessoa.getPeso() + ";" +
                        pessoa.getTipoSanguineo() + ";" +
                        pessoa.getCor()
                );
                bufferedWriter.newLine();
            }

            bufferedWriter.close();
            System.out.println("Arquivo CSV criado com sucesso!");

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Arquivo não exportado! Deu ruim.", "Alerta", JOptionPane.WARNING_MESSAGE);
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportarPessoas;
    // End of variables declaration//GEN-END:variables
}
